version: 1  # 配置檔案版本號

# backend:  # 後端的構建設定
#   phases:
#     build:  # 後端的建置階段
#       commands:
#         - npm ci --cache .npm --prefer-offline  # 使用 npm ci 安裝依賴，透過快取 .npm，並優先使用離線模式以提高速度
#         - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID  # 使用 AmpX 部署至指定的 AWS 分支與應用程式 ID（$AWS_BRANCH, $AWS_APP_ID 是環境變數）

frontend:  # 前端的構建設定
  phases:
    build:  # 前端的建置階段
      commands:
        - npm run build  # 執行前端建置指令（通常會產生靜態網站檔案至 dist 目錄）
  artifacts:  # 指定前端建置後要保留的構建產物
    baseDirectory: dist  # 構建完成後產生的靜態檔案的根目錄（通常 Vue、React 等框架會輸出到此資料夾）
    files:
      - '**/*'  # 保留 dist 目錄下所有檔案（包含子目錄與檔案）
  cache:  # 前端的快取設定，用於加速後續建置
    paths:
      - .npm/**/*  # 快取 npm 下載的套件檔案（npm 快取目錄）
      - node_modules/**/*  # 快取 node_modules 資料夾，加快下一次建置速度